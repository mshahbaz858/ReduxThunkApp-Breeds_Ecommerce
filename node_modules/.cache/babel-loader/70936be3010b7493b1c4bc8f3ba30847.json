{"ast":null,"code":"import axios from \"axios\";\nimport * as ActionTypes from \"./ActionTypes\";\nexport function SetSelectedBreedName(NewBreedName) {\n  return {\n    type: ActionTypes.SET_SELECT_BREED_NAME,\n    NewBreedName: NewBreedName\n  };\n}\nexport function delFromCart(deleteItem) {\n  return {\n    type: ActionTypes.DEL_FROM_CART,\n    deleteItem: deleteItem\n  };\n}\nexport function addToCart(cartUser) {\n  return {\n    type: ActionTypes.ADD_TO_CART,\n    cartUser: cartUser\n  };\n}\nexport function fetchBreedImage(image) {\n  return {\n    type: ActionTypes.FETCH_IMAGE,\n    image: image\n  };\n}\nexport function fetchBreedName(name) {\n  return {\n    type: ActionTypes.FETCH_NAME,\n    name: name\n  };\n}\nexport function fetchBreedError(error) {\n  return {\n    type: ActionTypes.FETCH_ERROR,\n    error: error\n  };\n}\nexport function FetchBreedData(breedName) {\n  return function (dispatch) {\n    axios.get(\"https://dog.ceo/api/breed/\".concat(breedName, \"/images/random\")).then(function (res) {\n      dispatch(fetchBreedImage(res.data.message));\n      dispatch(fetchBreedName(breedName));\n    }).catch(function (err) {\n      dispatch(fetchBreedError(err));\n    });\n  };\n}","map":{"version":3,"sources":["E:\\DEVELOPMENT\\react-project\\ReduxThunkApp-Breeds_Ecommerce\\src\\Redux\\Action\\BreedActions.js"],"names":["axios","ActionTypes","SetSelectedBreedName","NewBreedName","type","SET_SELECT_BREED_NAME","delFromCart","deleteItem","DEL_FROM_CART","addToCart","cartUser","ADD_TO_CART","fetchBreedImage","image","FETCH_IMAGE","fetchBreedName","name","FETCH_NAME","fetchBreedError","error","FETCH_ERROR","FetchBreedData","breedName","dispatch","get","then","res","data","message","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,SAASC,oBAAT,CAA8BC,YAA9B,EAA2C;AAC9C,SAAM;AACFC,IAAAA,IAAI,EAACH,WAAW,CAACI,qBADf;AAEFF,IAAAA,YAAY,EAAZA;AAFE,GAAN;AAKH;AAED,OAAO,SAASG,WAAT,CAAqBC,UAArB,EAAiC;AACpC,SAAO;AACHH,IAAAA,IAAI,EAAEH,WAAW,CAACO,aADf;AAEHD,IAAAA,UAAU,EAAVA;AAFG,GAAP;AAIH;AACD,OAAO,SAASE,SAAT,CAAmBC,QAAnB,EAA6B;AAChC,SAAO;AACHN,IAAAA,IAAI,EAAEH,WAAW,CAACU,WADf;AAEHD,IAAAA,QAAQ,EAARA;AAFG,GAAP;AAIH;AAGD,OAAO,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AACnC,SAAO;AACHT,IAAAA,IAAI,EAAEH,WAAW,CAACa,WADf;AAEHD,IAAAA,KAAK,EAALA;AAFG,GAAP;AAIH;AAGD,OAAO,SAASE,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,SAAO;AACHZ,IAAAA,IAAI,EAAEH,WAAW,CAACgB,UADf;AAEHD,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH;AAGD,OAAO,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AACnC,SAAO;AACHf,IAAAA,IAAI,EAAEH,WAAW,CAACmB,WADf;AAEHD,IAAAA,KAAK,EAALA;AAFG,GAAP;AAIH;AAED,OAAO,SAASE,cAAT,CAAwBC,SAAxB,EAAmC;AACtC,SAAO,UAAUC,QAAV,EAAoB;AACvBvB,IAAAA,KAAK,CACAwB,GADL,qCACsCF,SADtC,qBAEKG,IAFL,CAEU,UAACC,GAAD,EAAS;AACXH,MAAAA,QAAQ,CAACX,eAAe,CAACc,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAhB,CAAR;AACAL,MAAAA,QAAQ,CAACR,cAAc,CAACO,SAAD,CAAf,CAAR;AACH,KALL,EAMKO,KANL,CAMW,UAACC,GAAD,EAAS;AACZP,MAAAA,QAAQ,CAACL,eAAe,CAACY,GAAD,CAAhB,CAAR;AACH,KARL;AAUH,GAXD;AAYH","sourcesContent":["import axios from \"axios\"\nimport * as ActionTypes from \"./ActionTypes\"\n\nexport function SetSelectedBreedName(NewBreedName){\n    return{\n        type:ActionTypes.SET_SELECT_BREED_NAME,\n        NewBreedName\n    }\n\n}\n\nexport function delFromCart(deleteItem) {\n    return {\n        type: ActionTypes.DEL_FROM_CART,\n        deleteItem\n    }\n}\nexport function addToCart(cartUser) {\n    return {\n        type: ActionTypes.ADD_TO_CART,\n        cartUser\n    }\n}\n\n\nexport function fetchBreedImage(image) {\n    return {\n        type: ActionTypes.FETCH_IMAGE,\n        image\n    }\n}\n\n\nexport function fetchBreedName(name) {\n    return {\n        type: ActionTypes.FETCH_NAME,\n        name\n    }\n}\n\n\nexport function fetchBreedError(error) {\n    return {\n        type: ActionTypes.FETCH_ERROR,\n        error\n    }\n}\n\nexport function FetchBreedData(breedName) {\n    return function (dispatch) {\n        axios\n            .get(`https://dog.ceo/api/breed/${breedName}/images/random`)\n            .then((res) => {\n                dispatch(fetchBreedImage(res.data.message))\n                dispatch(fetchBreedName(breedName))\n            })\n            .catch((err) => {\n                dispatch(fetchBreedError(err))\n            })\n\n    }\n}"]},"metadata":{},"sourceType":"module"}